#First Get dataset from cadstre
#Unzip zip files
#Year 15 16 and 17 data for zone 10 and 11
#Directory structure
Data
----RawData
--------2020
------------AIS_2020_01_11.csv
------------AIS_2020_02_11.csv
------------AIS_2020_03_11.csv
------------AIS_2020_04_11.csv
------------AIS_2020_05_11.csv
------------AIS_2020_06_11.csv
------------AIS_2020_07_11.csv
------------AIS_2020_08_11.csv
------------AIS_2020_09_11.csv
------------AIS_2020_10_11.csv
------------AIS_2020_11_11.csv
------------AIS_2020_12_11.csv
------------AIS_2020_01_10.csv
------------AIS_2020_02_10.csv
------------AIS_2020_03_10.csv
------------AIS_2020_04_10.csv
------------AIS_2020_05_10.csv
------------AIS_2020_06_10.csv
------------AIS_2020_07_10.csv
------------AIS_2020_08_10.csv
------------AIS_2020_09_10.csv
------------AIS_2020_10_10.csv
------------AIS_2020_11_10.csv
------------AIS_2020_12_10.csv
--------2019
------------AIS_2019_01_11.csv
------------AIS_2019_02_11.csv
------------AIS_2019_03_11.csv
------------AIS_2019_04_11.csv
------------AIS_2019_05_11.csv
------------AIS_2019_06_11.csv
------------AIS_2019_07_11.csv
------------AIS_2019_08_11.csv
------------AIS_2019_09_11.csv
------------AIS_2019_10_11.csv
------------AIS_2019_11_11.csv
------------AIS_2019_12_11.csv
------------AIS_2019_01_10.csv
------------AIS_2019_02_10.csv
------------AIS_2019_03_10.csv
------------AIS_2019_04_10.csv
------------AIS_2019_05_10.csv
------------AIS_2019_06_10.csv
------------AIS_2019_07_10.csv
------------AIS_2019_08_10.csv
------------AIS_2019_09_10.csv
------------AIS_2019_10_10.csv
------------AIS_2019_11_10.csv
------------AIS_2019_12_10.csv
--------2018
............
--------2017
............
--------2016
............
--------2015
............
----M122_00_M118_50_33_40_36_40
--------20_01.csv
--------20_02.csv
--------20_03.csv
--------20_04.csv
--------20_05.csv
--------20_06.csv
--------20_07.csv
--------20_08.csv
--------20_09.csv
--------20_10.csv
--------20_11.csv
--------20_12.csv
--------19_01.csv
--------19_02.csv
--------19_03.csv
--------19_04.csv
--------19_05.csv
--------19_06.csv
--------19_07.csv
--------19_08.csv
--------19_09.csv
--------19_10.csv
--------19_11.csv
--------19_12.csv
--------MMSI_1004
--------MMSI_1004_TRAIN_INTP
--------MMSI_1004_TRAIN_WDEST_INTP
--------MMSI_1004_TEST_INTP
--------MMSI_1004_TEST_WDEST_INTP
--------MMSI_1024
--------MMSI_1024_TRAIN_INTP
--------MMSI_1024_TEST_INTP
--------MMSI_15
------------01
----------------368141490.csv
----------------368141490_Sorted.csv
.........................
------------02
------------03
------------04
------------05
------------06
------------07
------------08
------------09
------------10
------------11
------------12
--------MMSI_16
...............
--------MMSI_17
...............
--------MMSI_18
...............
--------MMSI_19
...............
--------MMSI_20
...............
--------MMSI_15_16_17_18_19_20_COMBINED
------------368141490.csv
------------368141490_Sorted.csv
.........................
--------Models
------------TS_5
----------------MODEL_MULTI_TASK_1000_MSE.h5
----------------XDataTS.npy
----------------YData.npy
----------------trainWholeErr_30NP.npy
----------------trainWholeErr_60NP.npy
----------------trainWholeErr_90NP.npy
----------------trainWholeErr_120NP.npy
----------------trainWholeErr_150NP.npy
----------------trainWholeErr_180NP.npy
----------------trainWholeErr_210NP.npy
----------------trainWholeErr_240NP.npy
----------------testWholeErr_30NP.npy
----------------testWholeErr_60NP.npy
----------------testWholeErr_90NP.npy
----------------testWholeErr_120NP.npy
----------------testWholeErr_150NP.npy
----------------testWholeErr_180NP.npy
----------------testWholeErr_210NP.npy
----------------testWholeErr_240NP.npy
------------TS_10
.................
------------TS_15
.................
------------TS_30
.................
------------TS_GridSOGCOG_5
.................
------------TS_GridSOGCOG_10
.................
------------TS_GridSOGCOG_15
.................
------------TS_GridSOGCOG_30
.................
------------TS_GridSOGCOG_Dest_5
.................
------------TS_GridSOGCOG_Dest_10
.................
------------TS_GridSOGCOG_Dest_15
.................
------------TS_GridSOGCOG_Dest_30
.................
------------JUST_TS_30_5
.................
------------JUST_TS_30_10
.................
------------JUST_TS_30_15
.................
------------JUST_TS_30_30
.................
------------JUST_TS_60_5
.................
------------JUST_TS_60_10
.................
------------JUST_TS_60_15
.................
------------JUST_TS_60_30
.................
------------TS_Type_30_5
.................
------------TS_Type_30_10
.................
------------TS_Type_30_15
.................
------------TS_Type_30_30
.................
------------TS_Type_60_5
.................
------------TS_Type_60_10
.................
------------TS_Type_60_15
.................
------------TS_Type_60_30
.................
------------TS_Type_Dest_30_5
.................
------------TS_Type_Dest_30_10
.................
------------TS_Type_Dest_30_15
.................
------------TS_Type_Dest_30_30
.................
------------TS_Type_Dest_60_5
.................
------------TS_Type_Dest_60_10
.................
------------TS_Type_Dest_60_15
.................
------------TS_Type_Dest_60_30
--------Output
------------HeatMap
------------1004_Test.csv
------------1004_Train.csv
------------1024_Test.csv
------------1024_Train.csv
------------COG_Mean_1004.npy
------------COG_Mean_1024.npy
------------COG_Median_1004.npy
------------COG_Median_1024.npy
------------SOG_Mean_1004.npy
------------SOG_Mean_1024.npy
------------SOG_Median_1004.npy
------------SOG_Median_1024.npy
------------MMSIList_15_16_17_18_19_20_1004_0.txt
------------MMSIList_15_16_17_18_19_20_1024_0.txt
------------MMSIList_15_16_17_18_19_20.txt
------------MMSIListType_15_16_17_18_19_20.csv
------------MMSITypleList_15_16_17_18_19_20.txt
------------TrackLen_1004.csv
------------TrackLen_1024.csv

Update Config file.
[REGION]
LON_MIN = -122.00
LON_MAX = -118.50
LAT_MIN = 33.40
LAT_MAX = 36.40

#then region segment
#Update Config file.
[REGION_SEG]
SOURCE_LOC_AFFIX = /home/jcharla/LiporLab/Data/RawData/
DEST_LOC_AFFIX = /home/jcharla/LiporLab/Data/
FILE_SUFFIX =
YEARS_TO_CONSIDER = 20

python RegionSeg.py 

#update YEARS_TO_CONSIDER for 15, 16, 17, 18, and 19 and run python RegionSeg.py
#you can also give list directly if you have sufficient memory, i.e. YEARS_TO_CONSIDER = 15,16,17,18,19,20

#then generate list of vessel names for that region
#Update Config file.
[GEN_VESSEL_LIST_TXT]
SRC_DIR_NAME = M122_00_M118_50_33_40_36_40
SOURCE_LOC_AFFIX = /home/jcharla/LiporLab/Data/
FILE_SUFFIX = 
YEARS_TO_CONSIDER = 15,16,17,18,19,20
DEST_FILE_NAME = /home/jcharla/LiporLab/Data/M122_00_M118_50_33_40_36_40/Output/MMSIList_15_16_17_18_19_20.txt

python GenVesselList.py

#Segregate individual vessel data assumes directory structure to 
#be present MMSI_15, MMSI_16, .....
#Update Config file.
SRC_DIR_NAME = M122_00_M118_50_33_40_36_40
SOURCE_LOC_AFFIX = /home/jcharla/LiporLab/Data/
YEARS_TO_CONSIDER = 15,16,17,18,19,20
MMSI_FILE = /home/jcharla/LiporLab/Data/M122_00_M118_50_33_40_36_40/Output/MMSIList_15_16_17_18_19_20.txt

python SegVessel.py

#Combine the monthly based data into a single file
#each file would consist data of a vessel of a particular MMSI
#Update Config file.
[COMBINE_VESSEL]
SOURCE_DIR_NAME = /home/jcharla/LiporLab/Data/M122_00_M118_50_33_40_36_40/
MMSI_FILE = /home/jcharla/LiporLab/Data/M122_00_M118_50_33_40_36_40/Output/MMSIList_15_16_17_18_19_20.txt
DEST_DIR = /home/jcharla/LiporLab/Data/M122_00_M118_50_33_40_36_40/MMSI_15_16_17_18_19_20_COMBINED/
YEARS_TO_CONSIDER = 15,16,17,18,19,20

python CombineVessel.py

#generate vessel type file for each MMSI present in MMSIList_15_16_17_18_19_20.txt
#Update Config file.
[GEN_VESSEL_TYPE]
SOURCE_DIR = /home/jcharla/LiporLab/Data/M122_00_M118_50_33_40_36_40/MMSI_15_16_17_18_19_20_COMBINED/
MMSI_FILE = /home/jcharla/LiporLab/Data/M122_00_M118_50_33_40_36_40/Output/MMSIList_15_16_17_18_19_20.txt
TYPE_LIST_DEST_FILE = /home/jcharla/LiporLab/Data/M122_00_M118_50_33_40_36_40/Output/MMSITypleList_15_16_17_18_19_20.txt
DEST_FILE = /home/jcharla/LiporLab/Data/M122_00_M118_50_33_40_36_40/Output/MMSIListType_15_16_17_18_19_20.csv

python GenVesselTypeFile.py

#Generate vessel list of individual type like 1004 and 1024
#Update Config file.
[GEN_VESSEL_LIST_OF_TYPE_FROM_RAW_TYPE]
MMSI_TYPE_FILE = /home/jcharla/LiporLab/Data/M122_00_M118_50_33_40_36_40/Output/MMSIListType_15_16_17_18_19_20.csv
DESIRED_TYPE = 1004.0
MMSI_SPEC_TYPE_DEST_FILE = /home/jcharla/LiporLab/Data/M122_00_M118_50_33_40_36_40/Output/MMSIList_15_16_17_18_19_20_1004_0.txt

python GenVesselListBasedOnRawType.py

#Update Config file.
[GEN_VESSEL_LIST_OF_TYPE_FROM_RAW_TYPE]
MMSI_TYPE_FILE = /home/jcharla/LiporLab/Data/M122_00_M118_50_33_40_36_40/Output/MMSIListType_15_16_17_18_19_20.csv
DESIRED_TYPE = 1024.0
MMSI_SPEC_TYPE_DEST_FILE = /home/jcharla/LiporLab/Data/M122_00_M118_50_33_40_36_40/Output/MMSIList_15_16_17_18_19_20_1024_0.txt

python GenVesselListBasedOnRawType.py

#Generate trajectory of the vessel
#trajectory can be considered as continuous stream of data
#Update Config file.
[GEN_VESSEL_TRAJ]
SRC_DIR = /home/jcharla/LiporLab/Data/M122_00_M118_50_33_40_36_40/MMSI_15_16_17_18_19_20_COMBINED/
MMSI_FILE = /home/jcharla/LiporLab/Data/M122_00_M118_50_33_40_36_40/Output/MMSIList_15_16_17_18_19_20_1004_0.txt
DEST_DIR = /home/jcharla/LiporLab/Data/M122_00_M118_50_33_40_36_40/MMSI_1004/

python GenVesselTraj.py

#Update Config file.
[GEN_VESSEL_TRAJ]
SRC_DIR = /home/jcharla/LiporLab/Data/M122_00_M118_50_33_40_36_40/MMSI_15_16_17_18_19_20_COMBINED/
MMSI_FILE = /home/jcharla/LiporLab/Data/M122_00_M118_50_33_40_36_40/Output/MMSIList_15_16_17_18_19_20_1024_0.txt
DEST_DIR = /home/jcharla/LiporLab/Data/M122_00_M118_50_33_40_36_40/MMSI_1024/

python GenVesselTraj.py

#######################
#Noteboook TypeEDA.ipynb can be executed to get number of vessels of each type (to justify why Cargo/Tanker they have maximum number of vessels)(optional)
#Noteboook TrackLengthSummary.ipynb can be executed to get estimate of number of trajectories with their length (optional)
#Noteboook TrackLengthSummary.ipynb also tries visualize how average SOG for vessel of different type may be different (to justify type as a feature)(optional)
#Noteboook SeasonalHM.ipynb can be executed to visualize monthly based traffic (to justify seasonal pattern)(optional)


#Execute GetBenchMarkDataset.ipynb
#This notebook creates train and test list and stores those lists in csv file
#It first tries to identify trajectories with lenth more than 240 minutes (needed for 4 hour prediction comparision)
#Then it takes 20% total number of trajectories, and selects those trajectories from these trajectories of 240 minutes (This is to make sure that testing data has all the trajectories for 4 hour prediction)

##Update Config file.
#This creates interpolated trajectories using nearest neighbour, ideal for training with different timestamps
#The same script is used for testing trajectories as well
#Error can be computed on generated testing trajectories 
[INTERP_TRAJ]
SRC_DIR = /home/jcharla/LiporLab/Data/M122_00_M118_50_33_40_36_40/MMSI_1004/
SRC_TRAIN_LIST = /home/jcharla/LiporLab/Data/M122_00_M118_50_33_40_36_40/Output/1004_Train.csv
DEST_DIR = /home/jcharla/LiporLab/Data/M122_00_M118_50_33_40_36_40/MMSI_1004_TRAIN_INTP/

python InterpolateTrainData.py

##Update Config file.
[INTERP_TRAJ]
SRC_DIR = /home/jcharla/LiporLab/Data/M122_00_M118_50_33_40_36_40/MMSI_1004/
SRC_TRAIN_LIST = /home/jcharla/LiporLab/Data/M122_00_M118_50_33_40_36_40/Output/1004_Test.csv
DEST_DIR = /home/jcharla/LiporLab/Data/M122_00_M118_50_33_40_36_40/MMSI_1004_TEST_INTP/

python InterpolateTrainData.py

##Update Config file.
[INTERP_TRAJ]
SRC_DIR = /home/jcharla/LiporLab/Data/M122_00_M118_50_33_40_36_40/MMSI_1024/
SRC_TRAIN_LIST = /home/jcharla/LiporLab/Data/M122_00_M118_50_33_40_36_40/Output/1024_Train.csv
DEST_DIR = /home/jcharla/LiporLab/Data/M122_00_M118_50_33_40_36_40/MMSI_1024_TRAIN_INTP/
python InterpolateTrainData.py

##Update Config file.
[INTERP_TRAJ]
SRC_DIR = /home/jcharla/LiporLab/Data/M122_00_M118_50_33_40_36_40/MMSI_1024/
SRC_TRAIN_LIST = /home/jcharla/LiporLab/Data/M122_00_M118_50_33_40_36_40/Output/1024_Test.csv
DEST_DIR = /home/jcharla/LiporLab/Data/M122_00_M118_50_33_40_36_40/MMSI_1024_TEST_INTP/

python InterpolateTrainData.py

##Update Config file.
[LSTM_MULTI_TASK_TRAIN]
LON_MIN = -122.00
LON_MAX = -118.50
LAT_MIN = 33.40
LAT_MAX = 36.40
SRC_DIR_1 = /home/jagir/LiporLab/Data/M122_00_M118_50_33_40_36_40/MMSI_1004_TRAIN_INTP/
SRC_DIR_TEST_1 = /home/jagir/LiporLab/Data/M122_00_M118_50_33_40_36_40/MMSI_1004_TEST_INTP/
SRC_DIR_2 = /home/jagir/LiporLab/Data/M122_00_M118_50_33_40_36_40/MMSI_1024_TRAIN_INTP/
SRC_DIR_TEST_2 = /home/jagir/LiporLab/Data/M122_00_M118_50_33_40_36_40/MMSI_1024_TEST_INTP/
MODEL_DIR = /home/jagir/LiporLab/Data/M122_00_M118_50_33_40_36_40/Models/TS_30/
MODEL_TS = 30

#Run LSTMMultiTak.ipynb Notebook
#This is a multitask model, it predicts SOG and COG as well
#The notbook is configurable to train the model with different timestamps 5 Minute, 10 Minute, 15, and 30 Minutes
#The notebook also computes training and testing error
#For testing data same data is used for all four models, which can be used to do apple to apple comparison

##Update Config file.
[COMPUTE_AVG_SOG]
INCR_STEP = 0.01
INCR_RES = 2
SRC_TRAIN_LIST = /home/jagir/LiporLab/Data/M122_00_M118_50_33_40_36_40/Output/1004_Train.csv
SRC_DIR = /home/jagir/LiporLab/Data/M122_00_M118_50_33_40_36_40/MMSI_1004/
OUTPUT_FILE = /home/jagir/LiporLab/Data/M122_00_M118_50_33_40_36_40/Output/SOG_Mean_1004.npy
OUTPUT_MED_FILE = /home/jagir/LiporLab/Data/M122_00_M118_50_33_40_36_40/Output/SOG_Median_1004.npy

python ComputeGridSOG.py

##Update Config file.
[COMPUTE_AVG_SOG]
INCR_STEP = 0.01
INCR_RES = 2
SRC_TRAIN_LIST = /home/jagir/LiporLab/Data/M122_00_M118_50_33_40_36_40/Output/1024_Train.csv
SRC_DIR = /home/jagir/LiporLab/Data/M122_00_M118_50_33_40_36_40/MMSI_1024/
OUTPUT_FILE = /home/jagir/LiporLab/Data/M122_00_M118_50_33_40_36_40/Output/SOG_Mean_1024.npy
OUTPUT_MED_FILE = /home/jagir/LiporLab/Data/M122_00_M118_50_33_40_36_40/Output/SOG_Median_1024.npy

python ComputeGridSOG.py

##Update Config file.
[COMPUTE_AVG_COG]
INCR_STEP = 0.01
INCR_RES = 2
SRC_TRAIN_LIST = /home/jagir/LiporLab/Data/M122_00_M118_50_33_40_36_40/Output/1004_Train.csv
SRC_DIR = /home/jagir/LiporLab/Data/M122_00_M118_50_33_40_36_40/MMSI_1004/
OUTPUT_FILE = /home/jagir/LiporLab/Data/M122_00_M118_50_33_40_36_40/Output/COG_Mean_1004.npy
OUTPUT_MED_FILE = /home/jagir/LiporLab/Data/M122_00_M118_50_33_40_36_40/Output/COG_Median_1004.npy

python ComputeGridCOG.py

##Update Config file.
[COMPUTE_AVG_COG]
INCR_STEP = 0.01
INCR_RES = 2
SRC_TRAIN_LIST = /home/jagir/LiporLab/Data/M122_00_M118_50_33_40_36_40/Output/1024_Train.csv
SRC_DIR = /home/jagir/LiporLab/Data/M122_00_M118_50_33_40_36_40/MMSI_1024/
OUTPUT_FILE = /home/jagir/LiporLab/Data/M122_00_M118_50_33_40_36_40/Output/COG_Mean_1024.npy
OUTPUT_MED_FILE = /home/jagir/LiporLab/Data/M122_00_M118_50_33_40_36_40/Output/COG_Median_1024.npy

python ComputeGridCOG.py

##Update Config file.
[LSTM_GRID_SOG_COG_TRAIN]
LON_MIN = -122.00
LON_MAX = -118.50
LAT_MIN = 33.40
LAT_MAX = 36.40
SRC_DIR_1 = /home/jagir/LiporLab/Data/M122_00_M118_50_33_40_36_40/MMSI_1004_TRAIN_INTP/
SRC_DIR_TEST_1 = /home/jagir/LiporLab/Data/M122_00_M118_50_33_40_36_40/MMSI_1004_TEST_INTP/
SRC_1_SOG = /home/jagir/LiporLab/Data/M122_00_M118_50_33_40_36_40/Output/SOG_Median_1004.npy
SRC_1_COG = /home/jagir/LiporLab/Data/M122_00_M118_50_33_40_36_40/Output/COG_Median_1004.npy
SRC_DIR_2 = /home/jagir/LiporLab/Data/M122_00_M118_50_33_40_36_40/MMSI_1024_TRAIN_INTP/
SRC_DIR_TEST_2 = /home/jagir/LiporLab/Data/M122_00_M118_50_33_40_36_40/MMSI_1024_TEST_INTP/
SRC_2_SOG = /home/jagir/LiporLab/Data/M122_00_M118_50_33_40_36_40/Output/SOG_Median_1024.npy
SRC_2_COG = /home/jagir/LiporLab/Data/M122_00_M118_50_33_40_36_40/Output/COG_Median_1024.npy
MODEL_DIR = /home/jagir/LiporLab/Data/M122_00_M118_50_33_40_36_40/Models/TS_GridSOGCOG_30/
MODEL_TS = 30
INCR_STEP = 0.01
INCR_RES = 2

#Execute LSTMGridSOGCOG.ipynb notebook to train the network, which predicts just LAT and LON
#This notebook is also configurable for different timestamps 5 Minute, 10 Minute, 15, and 30 Minutes
#and uses grid median of SOG and COG
#Same testing data is used for error computation
#So performance of all 8 models can be evaluated

##Update Config file.
#This creates interpolated trajectories using nearest neighbour, ideal for training with different timestamps also assigns destination to individual trajectories
[INTERP_TRAJ_DEST]
SRC_DIR = /home/jagir/LiporLab/Data/M122_00_M118_50_33_40_36_40/MMSI_1004/
SRC_TRAIN_LIST = /home/jagir/LiporLab/Data/M122_00_M118_50_33_40_36_40/Output/1004_Train.csv
DEST_DIR = /home/jagir/LiporLab/Data/M122_00_M118_50_33_40_36_40/MMSI_1004_TRAIN_WDEST_INTP/

python InterpolateTrainDataWDest.py

##Update Config file.
[INTERP_TRAJ_DEST]
SRC_DIR = /home/jagir/LiporLab/Data/M122_00_M118_50_33_40_36_40/MMSI_1004/
SRC_TRAIN_LIST = /home/jagir/LiporLab/Data/M122_00_M118_50_33_40_36_40/Output/1004_Test.csv
DEST_DIR = /home/jagir/LiporLab/Data/M122_00_M118_50_33_40_36_40/MMSI_1004_TEST_WDEST_INTP/

python InterpolateTrainDataWDest.py

##Update Config file.
[INTERP_TRAJ_DEST]
SRC_DIR = /home/jagir/LiporLab/Data/M122_00_M118_50_33_40_36_40/MMSI_1024/
SRC_TRAIN_LIST = /home/jagir/LiporLab/Data/M122_00_M118_50_33_40_36_40/Output/1024_Train.csv
DEST_DIR = /home/jagir/LiporLab/Data/M122_00_M118_50_33_40_36_40/MMSI_1024_TRAIN_WDEST_INTP/

python InterpolateTrainDataWDest.py

##Update Config file.
[INTERP_TRAJ_DEST]
SRC_DIR = /home/jagir/LiporLab/Data/M122_00_M118_50_33_40_36_40/MMSI_1024/
SRC_TRAIN_LIST = /home/jagir/LiporLab/Data/M122_00_M118_50_33_40_36_40/Output/1024_Test.csv
DEST_DIR = /home/jagir/LiporLab/Data/M122_00_M118_50_33_40_36_40/MMSI_1024_TEST_WDEST_INTP/

python InterpolateTrainDataWDest.py

##Update Config file.
[LSTM_TS_TRAIN]
LON_MIN = -122.00
LON_MAX = -118.50
LAT_MIN = 33.40
LAT_MAX = 36.40
SRC_DIR_1 = /home/jagir/LiporLab/Data/M122_00_M118_50_33_40_36_40/MMSI_1004_TRAIN_INTP/
SRC_DIR_TEST_1 = /home/jagir/LiporLab/Data/M122_00_M118_50_33_40_36_40/MMSI_1004_TEST_INTP/
SRC_DIR_2 = /home/jagir/LiporLab/Data/M122_00_M118_50_33_40_36_40/MMSI_1024_TRAIN_INTP/
SRC_DIR_TEST_2 = /home/jagir/LiporLab/Data/M122_00_M118_50_33_40_36_40/MMSI_1024_TEST_INTP/
MODEL_DIR = /home/jagir/LiporLab/Data/M122_00_M118_50_33_40_36_40/Models/JUST_TS_30_30/
MODEL_TS = 30
USE_60_30 = 0

#Execute LSTMTS.ipynb notebook to train the network, which predicts just LAT and LON using just LAT and LON coordinates
#The notebook can take data of upto 60 minutes or 30 minutes, which is configurable by USE_60_30 parameter

##Update Config file.
[LSTM_TS_TYPE_TRAIN]
LON_MIN = -122.00
LON_MAX = -118.50
LAT_MIN = 33.40
LAT_MAX = 36.40
SRC_DIR_1 = /home/jagir/LiporLab/Data/M122_00_M118_50_33_40_36_40/MMSI_1004_TRAIN_INTP/
SRC_DIR_TEST_1 = /home/jagir/LiporLab/Data/M122_00_M118_50_33_40_36_40/MMSI_1004_TEST_INTP/
SRC_DIR_2 = /home/jagir/LiporLab/Data/M122_00_M118_50_33_40_36_40/MMSI_1024_TRAIN_INTP/
SRC_DIR_TEST_2 = /home/jagir/LiporLab/Data/M122_00_M118_50_33_40_36_40/MMSI_1024_TEST_INTP/
MODEL_DIR = /home/jagir/LiporLab/Data/M122_00_M118_50_33_40_36_40/Models/TS_Type_30_30/
MODEL_TS = 30
USE_60_30 = 0

#Execute LSTMTSType.ipynb notebook to train the network, which predicts just LAT and LON using LAT and LON coordinates and Type of vessel as a feature.

##Update Config file.
[LSTM_TS_TYPE_DEST_TRAIN]
LON_MIN = -122.00
LON_MAX = -118.50
LAT_MIN = 33.40
LAT_MAX = 36.40
SRC_DIR_1 = /home/jagir/LiporLab/Data/M122_00_M118_50_33_40_36_40/MMSI_1004_TRAIN_WDEST_INTP/
SRC_DIR_TEST_1 = /home/jagir/LiporLab/Data/M122_00_M118_50_33_40_36_40/MMSI_1004_TEST_WDEST_INTP/
SRC_DIR_2 = /home/jagir/LiporLab/Data/M122_00_M118_50_33_40_36_40/MMSI_1024_TRAIN_WDEST_INTP/
SRC_DIR_TEST_2 = /home/jagir/LiporLab/Data/M122_00_M118_50_33_40_36_40/MMSI_1024_TEST_WDEST_INTP/
MODEL_DIR = /home/jagir/LiporLab/Data/M122_00_M118_50_33_40_36_40/Models/TS_Type_Dest_30_30/
MODEL_TS = 30
USE_60_30 = 0

#Execute LSTMTSTypeDest.ipynb notebook to train the network, which predicts just LAT and LON using LAT and LON coordinates, and Type of vessel, and destination as a feature.

##Update Config file.
[LSTM_GRID_SOG_COG_DEST_TRAIN]
LON_MIN = -122.00
LON_MAX = -118.50
LAT_MIN = 33.40
LAT_MAX = 36.40
SRC_DIR_1 = /home/jagir/LiporLab/Data/M122_00_M118_50_33_40_36_40/MMSI_1004_TRAIN_WDEST_INTP/
SRC_DIR_TEST_1 = /home/jagir/LiporLab/Data/M122_00_M118_50_33_40_36_40/MMSI_1004_TEST_WDEST_INTP/
SRC_1_SOG = /home/jagir/LiporLab/Data/M122_00_M118_50_33_40_36_40/Output/SOG_Median_1004.npy
SRC_1_COG = /home/jagir/LiporLab/Data/M122_00_M118_50_33_40_36_40/Output/COG_Median_1004.npy
SRC_DIR_2 = /home/jagir/LiporLab/Data/M122_00_M118_50_33_40_36_40/MMSI_1024_TRAIN_WDEST_INTP/
SRC_DIR_TEST_2 = /home/jagir/LiporLab/Data/M122_00_M118_50_33_40_36_40/MMSI_1024_TEST_WDEST_INTP/
SRC_2_SOG = /home/jagir/LiporLab/Data/M122_00_M118_50_33_40_36_40/Output/SOG_Median_1024.npy
SRC_2_COG = /home/jagir/LiporLab/Data/M122_00_M118_50_33_40_36_40/Output/COG_Median_1024.npy
MODEL_DIR = /home/jagir/LiporLab/Data/M122_00_M118_50_33_40_36_40/Models/TS_GridSOGCOG_Dest_30/
MODEL_TS = 30
INCR_STEP = 0.01
INCR_RES = 2

#Execute LSTMGridSOGCOGDest.ipynb notebook to train the network, which predicts just LAT and LON using LAT and LON coordinates, and Type of vessel, and destination, and GridSOG, and GridCOG as a feature.

##Update Config file.
[LSTM_MULTI_TASK_DEST_TRAIN]
LON_MIN = -122.00
LON_MAX = -118.50
LAT_MIN = 33.40
LAT_MAX = 36.40
SRC_DIR_1 = /home/jagir/LiporLab/Data/M122_00_M118_50_33_40_36_40/MMSI_1004_TRAIN_WDEST_INTP/
SRC_DIR_TEST_1 = /home/jagir/LiporLab/Data/M122_00_M118_50_33_40_36_40/MMSI_1004_TEST_WDEST_INTP/
SRC_DIR_2 = /home/jagir/LiporLab/Data/M122_00_M118_50_33_40_36_40/MMSI_1024_TRAIN_WDEST_INTP/
SRC_DIR_TEST_2 = /home/jagir/LiporLab/Data/M122_00_M118_50_33_40_36_40/MMSI_1024_TEST_WDEST_INTP/
MODEL_DIR = /home/jagir/LiporLab/Data/M122_00_M118_50_33_40_36_40/Models/TS_DEST_30/
MODEL_TS = 30

#Execute LSTMMultiTakDest.ipynb notebook